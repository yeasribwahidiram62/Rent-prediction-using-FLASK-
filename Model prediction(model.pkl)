import os
import pickle
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
import tabula

#Extract PDF table
PDF_PATH = "House rent csv.pdf"

tables = tabula.read_pdf(PDF_PATH, pages="all", multiple_tables=True) # Read all tables from PDF


df_list = [tbl for tbl in tables if tbl is not None and not tbl.empty] # Merge all tables
df = pd.concat(df_list, ignore_index=True)


df = df.iloc[:, :2] # Select only the first two columns before renaming


df.columns = ["Rent", "Size"]  # Rename columns to match expected format


df = df.apply(pd.to_numeric, errors="coerce").dropna() # Ensuring numeric types


X = df[["Size"]].to_numpy() # Features and target
y = df["Rent"].to_numpy()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # Split

models = {"LinearRegression": LinearRegression(),"RandomForest": RandomForestRegressor(n_estimators=100, random_state=42)} # Models


cv_scores = {} #Cross-validation
for name, model in models.items():
    scores = cross_val_score(model, X_train, y_train, cv=5, scoring="r2")
    cv_scores[name] = scores.mean()
    print(f"{name} CV RÂ² mean: {scores.mean():.4f}")


best_model_name = max(cv_scores, key=cv_scores.get) #Select best model
best_model = models[best_model_name]
print(f"Best model selected: {best_model_name}")


best_model.fit(X_train, y_train) # Fit


MODEL_DIR = "model" # Save the model
MODEL_PATH = os.path.join(MODEL_DIR, "model.pkl")
os.makedirs(MODEL_DIR, exist_ok=True)
with open(MODEL_PATH, "wb") as f:
    pickle.dump(best_model, f)

print("Model saved to model/model.pkl")
